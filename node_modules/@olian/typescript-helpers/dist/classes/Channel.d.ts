/**
 * A Channel allows for message passing between two or more asynchronous function with the option of being notified when a sent message is received.
 *
 * ```ts
 * const channel = new Channel<number>();
 *
 * const sender = async (i = 0): Promise<void> => {
 *   await channel.send(i);
 *   return sender(i + 1);
 * }
 *
 * sender();
 * await channel.receive(); // 0
 * await channel.receive(); // 1
 * await channel.receive(); // 2
 * await channel.receive(); // 3
 * ```
 */
export declare class Channel<T> {
    private awaitReceiveMap;
    private bucket;
    send(value: T): Promise<void>;
    receive(): Promise<T>;
    get generator(): AsyncGenerator<Awaited<T>, void, unknown>;
    private getGenerator;
}

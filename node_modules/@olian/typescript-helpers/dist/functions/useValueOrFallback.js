"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.useValueOrFallback = void 0;
/**
 * Used to extract a value that might be undefined from an object that might be undefined, and if any of them are undefined use a fallback value.
 *
 * ```ts
 * import { someObject } from '...';
 * const fallback = {
 *    foo: 42,
 * };
 *
 * const foo = useValueOrFallback(someObject, 'foo', fallback.foo); // 42
 * ```
 *
 * @param obj The source object
 * @param key The key used to to extract the value
 * @param fallback The value to use if no valid value was found or the source object was undefined
 */
const useValueOrFallback = (obj, key, fallback, treatAsFalsy) => {
    if (obj === undefined)
        return fallback;
    if (obj === null)
        return fallback;
    if (!(key in obj))
        return fallback;
    if (treatAsFalsy && treatAsFalsy.indexOf(obj[key]) > -1) {
        return fallback;
    }
    return obj[key];
};
exports.useValueOrFallback = useValueOrFallback;

import { DecoratedInstance } from './lib/interfaces/decoratedInstance';
import { LogFunctionMap } from './lib/interfaces/logFunctionMap';
export * as Theme from './themes';
export { MessageConstructionStrategy } from './lib/enums/messageConstructionStrategy';
export { expressMiddleware } from './express';
declare global {
    interface Console extends DecoratedInstance {
    }
}
export declare const CustomInstance: (implementation: LogFunctionMap | LogFunctionMap[]) => <T extends object>(target: T, config?: import("@olian/typescript-helpers").DeepPartial<import("./lib/config").Config>) => target is T & DecoratedInstance;
export declare const betterLogging: <T extends object>(target: T, config?: import("@olian/typescript-helpers").DeepPartial<import("./lib/config").Config>) => target is T & DecoratedInstance;
export default betterLogging;
